/* Generated by AN DISI Unibo */ 
/*
This code is generated only ONCE
*/
package it.unibo.sonarb;
import java.util.*;
import it.unibo.contactEvent.interfaces.*;
import it.unibo.is.interfaces.IOutputEnvView;
import it.unibo.qactors.QActorContext;
import it.unibo.qactors.action.*;

public class Sonarb extends AbstractSonarb { 
	public Sonarb(String actorId, QActorContext myCtx, IOutputEnvView outEnvView )  throws Exception{
		super(actorId, myCtx, outEnvView);
	}
	
	public void initSonarMock(){
		//attendiStart();
		new Timer().schedule(new TimerTask(){
			@Override
			public void run(){
				//emetto evento terminazione
				emit("stop","stop");
				println("rover rilevato sulla linea d'arrivo");
			}
		},10000);
		/*try {
			Thread.sleep(9000);
			println("passati 9 s");
		} catch (InterruptedException e){}
		//emetto evento terminazione
		emit("data","distanza(B, d(42))");
		println("rover rilevato sulla linea d'arrivo");*/
	}
	public void attendiStart(){
		attendi("cmd",e->e.getMsg().equals("cmd(start)"));
	}
	public void initSonarUnity(){
		try {
			attendi("sonar",e->e.getMsg().startsWith("sonar(sonar2,rover,"));
			emit("stop","stop");
//			String d=currentEvent.getMsg();
//			emit("local_sonar","sonar(sonar2,"+d.substring(d.lastIndexOf(','+1),d.length()-1)+")");
		}catch(Exception e){
			e.printStackTrace();
		}
	}
	private void attendi(String evId, java.util.function.Predicate<IEventItem> p){
		boolean ok=false;
		do {
			try{
				AsynchActionResult r=this.senseEvents(600000,evId);
				if (r.getGoon() && r.getTimeRemained()>0 && currentEvent.getEventId().equals(evId) && p.test(currentEvent))
					ok=true;
			} catch (Exception e){
				e.printStackTrace();
			}
		} while (!ok);
	}
}
