/* Generated by AN DISI Unibo */ 
/*
This code is generated only ONCE
*/
package it.unibo.sonarrasp;
import java.io.BufferedReader;
import it.unibo.is.interfaces.IOutputEnvView;
import it.unibo.qactors.QActorContext;

public class Sonarrasp extends AbstractSonarrasp { 
 protected BufferedReader readerC;
  
 public Sonarrasp(String actorId, QActorContext myCtx, IOutputEnvView outEnvView )  throws Exception{
  super(actorId, myCtx, outEnvView);
 }
/*
 * ADDED 
 */
 public void startSonarC(){
    try {
     println("startSonarC"   );
   Process p = Runtime.getRuntime().exec("sudo ./SonarAlone");
   readerC   = new BufferedReader(new java.io.InputStreamReader(p.getInputStream()));
//   println("Process in C STARTED "  +  readerC);
   println("Process in C reads   "  +  getDistanceFromSonar() );
  } catch (Exception e) {
    e.printStackTrace();
  }  
 } 
 public String getDistanceFromSonar(){
  try {
    String inpS = readerC.readLine();   
    println("getDistanceFromSonar " + inpS  );
    return "d("+inpS+")";
  } catch (Exception e) {
    e.printStackTrace();
    return "d(0)"; 
  }
 } 
 
}