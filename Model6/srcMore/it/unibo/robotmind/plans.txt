plan(1,init, sentence(true,move(print("controller starts")),'','' ))
plan(2,init, sentence(true,move( switchplan(aspettaEventi) ),'','' ))
plan(1,aspettaEventi, sentence(true,move(print("in ascolto")),'','' ))
plan(2,aspettaEventi, sentence(true,senseEvent(600000,"robotLeave,robotDetected,cmd,ostacolo","continue,continue,continue,continue"),'','' ))
plan(3,aspettaEventi, sentence(true,printCurrentEvent(false),'','' ))
plan(4,aspettaEventi, sentence( davanti( sonara,rover),eventswitch(cmd, Â»cmd( start), forward(rover, comando,comando( avanti)) ),'','' ))
plan(5,aspettaEventi, sentence( davanti( sonara,rover),move(print(davanti( sonara,rover))),'','' ))
plan(6,aspettaEventi, sentence( davanti( sonara,rover),eventswitch(robotLeave, Â»robotLeave( sonara), removeRule( davanti( sonara,rover) ) ),'','' ))
plan(7,aspettaEventi, sentence(true,eventswitch(ostacolo, Â»ostacolo, move( switchplan(valutaOstacolo) ) ),'','' ))
plan(8,aspettaEventi, sentence(true,eventswitch(robotDetected, Â»robotDetected( sonarb,D), move(solve,assign( distanzaB,D),0,"") ),'','' ))
plan(9,aspettaEventi, sentence(true,eventswitch(robotDetected, Â»robotDetected( sonarb,D), raise( stop , stop )') ),'','' ))
plan(10,aspettaEventi, sentence(true,eventswitch(robotDetected, Â»robotDetected( sonarb,D), move( switchplan(risolviGap) ) ),'','' ))
plan(11,aspettaEventi, sentence(true,repeatplan(0) ,'','' ))
plan(1,risolviGap, sentence(true,move(print("piano risolviGap")),'','' ))
plan(2,risolviGap, sentence(true,move(solve,gap( Dir,Dist),0,""),'','' ))
plan(3,risolviGap, sentence( goalResult( G),move(print(G)),'','' ))
plan(4,risolviGap, sentence(-  goalResult( gap( destra,D)) ,forward(rover, comando,comando( destra)),'','' ))
plan(5,risolviGap, sentence(-  goalResult( gap( sinistra,D)) ,forward(rover, comando,comando( sinistra)),'','' ))
plan(6,risolviGap, sentence(-  goalResult( gap( no,D)) ,endplan(''),'','' ))
plan(7,risolviGap, sentence(true,move(resumeplan),'','' ))
plan(1,controlloPosizione, sentence(true,move(print("piano controlloPosizione")),'','' ))
plan(2,controlloPosizione, sentence(true,senseEvent(600000,"robotDetected,ostacolo","continue,continue"),'','' ))
plan(3,controlloPosizione, sentence(true,printCurrentEvent(false),'','' ))
plan(4,controlloPosizione, sentence(true,eventswitch(ostacolo, Â»ostacolo, move( switchplan(valutaOstacolo) ) ),'','' ))
plan(5,controlloPosizione, sentence(true,eventswitch(robotDetected, Â»robotDetected( sonarb,D), move(solve,assign( distanzaB,D),0,"") ),'','' ))
plan(6,controlloPosizione, sentence(true,eventswitch(robotDetected, Â»robotDetected( sonarb,D), move(solve,gap( Dir,Dist),0,"") ),'','' ))
plan(7,controlloPosizione, sentence( goalResult( gap( Dir,D)),move(print(D)),'','' ))
plan(8,controlloPosizione, sentence(-  goalResult( gap( Dir,0)) ,eventswitch(robotDetected, Â»robotDetected( sonarb,D), raise( stop , stop )') ),'','' ))
plan(9,controlloPosizione, sentence(true,move(resumeplan),'','' ))
plan(1,valutaOstacolo, sentence(true,delay( 2000) ,'','' ))
plan(2,valutaOstacolo, sentence(true,senseEvent(500,"ostacolo","continue"),'','' ))
plan(3,valutaOstacolo, sentence( tout( senseevent,QA),forward(rover, comando,comando( avanti)),'','' ))
plan(4,valutaOstacolo, sentence(-  tout( senseevent,QA) ,endplan(''),'','' ))
plan(5,valutaOstacolo, sentence(true,eventswitch(ostacolo, Â»ostacolo, move(print("Ostacolo fisso")) ),'','' ))
plan(6,valutaOstacolo, sentence(true,eventswitch(ostacolo, Â»ostacolo, move( switchplan(ricercaVarcoDestra) ) ),'','' ))
plan(7,valutaOstacolo, sentence(true,move(resumeplan),'','' ))
plan(1,ricercaVarcoDestra, sentence(true,move(print("piano ricercaVarcoDestra")),'','' ))
plan(2,ricercaVarcoDestra, sentence(true,move(solve,possibilePassaggioADestra,0,"errore"),'','' ))
plan(3,ricercaVarcoDestra, sentence(true,forward(rover, comando,comando( varcoDestra)),'','' ))
plan(4,ricercaVarcoDestra, sentence(true,receiveTheMsg(terminataProcedura,dispatch,rover,robotmind,terminataProcedura( X),N ),'','' ))
plan(5,ricercaVarcoDestra, sentence(true,msgswitch(terminataProcedura, terminataProcedura( X) , move(print(X))),'','' ))
plan(6,ricercaVarcoDestra, sentence(true,msgswitch(terminataProcedura, terminataProcedura( X) , addRule( X )),'','' ))
plan(7,ricercaVarcoDestra, sentence(-  libero ,forward(rover, comando,comando( avanti)),'','' ))
plan(8,ricercaVarcoDestra, sentence(-  muroDiFianco ,move( switchplan(errore) ),'','' ))
plan(9,ricercaVarcoDestra, sentence(-  muroDavanti ,repeatplan(0) ,'','' ))
plan(10,ricercaVarcoDestra, sentence(true,move(resumeplan),'','' ))
plan(1,errore, sentence(true,not here PlanMove,'','' ))
